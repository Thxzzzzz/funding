swagger: "2.0"
info:
  title: Funding Api
  description: Funding
  version: 1.0.0
basePath: /v1
paths:
  /comments/saveCommentsInfo:
    post:
      tags:
      - comments
      description: 保存评论信息
      operationId: CommentController.保存评论信息
      parameters:
      - in: body
        name: form
        description: 评论信息
        required: true
        schema:
          $ref: '#/definitions/models.CommentsInfo'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /comments/saveCommentsReply:
    post:
      tags:
      - comments
      description: 保存回复信息
      operationId: CommentController.保存回复信息
      parameters:
      - in: body
        name: form
        description: 回复信息
        required: true
        schema:
          $ref: '#/definitions/models.CommentsReply'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /license/all:
    get:
      tags:
      - license
      operationId: LicenseController.获取全部执照信息
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /license/getByVerifyStatus:
    get:
      tags:
      - license
      operationId: LicenseController.获取对应状态的执照信息
      parameters:
      - in: query
        name: verify_status
        description: 验证状态
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /license/licenseById:
    get:
      tags:
      - license
  /license/update:
    post:
      tags:
      - license
      description: '审核状态 ( (1：已通过 2：待审核 3: 待提交 4: 未通过 )  对应 enums.VerifyXXXX 常量)'
      operationId: LicenseController.更新执照 (包括审核状态)
      parameters:
      - in: body
        name: form
        description: 执照model
        required: true
        schema:
          $ref: '#/definitions/models.License'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/addOrder:
    post:
      tags:
      - order
      description: 新增订单
      operationId: OrderController.新增订单
      parameters:
      - in: body
        name: orderForm
        description: 新增订单信息
        required: true
        schema:
          $ref: '#/definitions/forms.NewOrderForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/orderInIds:
    get:
      tags:
      - order
      description: 根据订单 Id 列表来获取订单列表
      operationId: OrderController.根据订单 Id 列表来获取订单列表
      parameters:
      - in: query
        name: orderId
        description: 订单列表的Json字符串
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/orderList:
    get:
      tags:
      - order
      description: 根据页面信息来获取订单列表
      operationId: OrderController.根据页面信息来获取订单列表
      parameters:
      - in: body
        name: pageForm
        description: 页码信息
        required: true
        schema:
          $ref: '#/definitions/forms.PageForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/orderListToSeller:
    get:
      tags:
      - order
      description: 商家获取订单列表
      operationId: OrderController.商家获取订单列表
      parameters:
      - in: body
        name: form
        description: 订单ID列表
        required: true
        schema:
          $ref: '#/definitions/forms.SellerGetOrderListForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/orderPay:
    post:
      tags:
      - order
      description: 根据订单 ID 列表来进行支付
      operationId: OrderController.根据订单 ID 列表来进行支付
      parameters:
      - in: body
        name: orderIds
        description: 订单ID列表
        required: true
        schema:
          type: array
          items:
            format: int64
            type: integer
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /order/sendOutOrder:
    post:
      tags:
      - order
      description: 发货
      operationId: OrderController.发货
      parameters:
      - in: body
        name: form
        description: 发货参数
        required: true
        schema:
          $ref: '#/definitions/forms.OrderSendOutForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /pm/allProductBySellerId:
    get:
      tags:
      - pm
      description: 根据卖家UserID 获取产品信息 (从Token里取UserID)
      operationId: ProductMangerController.根据卖家UserID 获取产品信息 (从Token里取UserID)
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /pm/pkgListByProductId:
    get:
      tags:
      - pm
      description: 根据卖家UserID 根据产品 Id 获取产品信息
      operationId: ProductMangerController.根据产品 Id 获取产品信息
      parameters:
      - in: query
        name: product_id
        description: 套餐ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /pm/productById:
    get:
      tags:
      - pm
  /pm/save:
    post:
      tags:
      - pm
      description: 保存产品
      operationId: ProductMangerController.保存产品
      parameters:
      - in: body
        name: form
        description: 产品model
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /pm/saveProductPackage:
    post:
      tags:
      - pm
      description: 保存产品 不知道怎么写文件参数，所以这个API 没法用 swagger 测试
      operationId: ProductMangerController.保存产品
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/all:
    get:
      tags:
      - product
      description: 获取全部产品信息
      operationId: ProductController.Get All Products
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/checkoutPkgInfo:
    get:
      tags:
      - product
      description: 获取结算所需的套餐信息 （给“立即支持”这个功能用）
      operationId: ProductController.获取结算所需的套餐信息 （给“立即支持”这个功能用）
      parameters:
      - in: query
        name: product_package_id
        description: 套餐ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/resultModels.CheckoutPkgInfo'
        "400":
          description: ""
  /product/detail:
    get:
      tags:
      - product
      description: 根据 id 获取带有套餐信息的指定产品信息
      operationId: ProductController.Get Product With Detail
      parameters:
      - in: query
        name: id
        description: 商品ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: ""
  /product/getCommentInfoByProductId:
    get:
      tags:
      - product
      description: 根据商品 ID 获取商家信息
      operationId: ProductController.根据商品 ID 获取商家信息
      parameters:
      - in: query
        name: product_id
        description: 套餐ID
        required: true
        type: integer
        format: int64
      - in: query
        name: page
        description: 页码
        required: true
        type: integer
        format: int64
      - in: query
        name: page_size
        description: 每页数量
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/getProductCountInfo:
    get:
      tags:
      - product
      description: 获取统计信息
      operationId: ProductController.获取统计信息
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/getProductList:
    get:
      tags:
      - product
      description: '获取产品列表，包括未审核的 (1：已通过 2：待审核 3: 待提交 4: 未通过 ) 新建的默认应为待审核状态'
      operationId: ManagerProductController.获取产品列表，包括未审核的和待提交的也能获取到
      parameters:
      - in: query
        name: page
        description: 页码
        required: true
        type: integer
        format: int64
      - in: query
        name: page_size
        description: 每页数量
        required: true
        type: integer
        format: int64
      - in: query
        name: name
        description: 产品名称
        type: string
      - in: query
        name: type
        description: 产品类型
        type: integer
        format: int64
      - in: query
        name: funding_status
        description: 众筹状态
        type: integer
        format: int64
      - in: query
        name: sort
        description: 排序方式
        type: integer
        format: int64
      - in: query
        name: price_gt
        description: 价格大于
        type: number
        format: double
      - in: query
        name: price_lt
        description: 价格小于
        type: number
        format: double
      - in: query
        name: verify_status
        description: 审核状态
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/getSellerByProductId:
    get:
      tags:
      - product
      description: 根据商品 ID 获取商家信息
      operationId: ProductController.根据商品 ID 获取商家信息
      parameters:
      - in: query
        name: product_id
        description: 套餐ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/home:
    get:
      tags:
      - product
      description: 获取首页信息
      operationId: ProductController.Get Home Page Info
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/pkgListByProductId:
    get:
      tags:
      - product
      description: 根据卖家UserID 根据产品 Id 获取产品信息
      operationId: ManagerProductController.根据产品 Id 获取产品信息
      parameters:
      - in: query
        name: product_id
        description: 套餐ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/productById:
    get:
      tags:
      - product
  /product/productList:
    get:
      tags:
      - product
      description: 据页码和其他条件获取产品信息
      operationId: ProductController.据页码和其他条件获取产品信息
      parameters:
      - in: query
        name: page
        description: 页码
        required: true
        type: integer
        format: int64
      - in: query
        name: page_size
        description: 每页数量
        required: true
        type: integer
        format: int64
      - in: query
        name: name
        description: 产品名称
        type: string
      - in: query
        name: type
        description: 产品类型
        type: integer
        format: int64
      - in: query
        name: funding_status
        description: 众筹状态
        type: integer
        format: int64
      - in: query
        name: sort
        description: 排序方式
        type: integer
        format: int64
      - in: query
        name: price_gt
        description: 价格大于
        type: number
        format: double
      - in: query
        name: price_lt
        description: 价格小于
        type: number
        format: double
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /product/typeList:
    get:
      tags:
      - product
      description: 获取产品类型列表
      operationId: ProductController.获取产品类型列表
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.ProductType'
        "400":
          description: ""
  /product/update:
    post:
      tags:
      - product
      description: '审核状态 ( (1：已通过 2：待审核 3: 待提交 4: 未通过 )  对应 enums.VerifyXXXX 常量)'
      operationId: ManagerProductController.更新产品 (包括审核状态)
      parameters:
      - in: body
        name: form
        description: 产品model
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/address/all:
    get:
      tags:
      - user/address
      description: 根据 userId 获取收货地址
      operationId: AddressController.根据 userId 获取收货地址
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Address'
        "400":
          description: ""
  /user/address/delete:
    post:
      tags:
      - user/address
      description: 根据地址的 id 删除对应的地址
      operationId: AddressController.根据地址的 id 删除对应的地址
      parameters:
      - in: formData
        name: id
        description: 地址的id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/address/new:
    post:
      tags:
      - user/address
      description: 添加新的地址
      operationId: AddressController.添加新的地址
      parameters:
      - in: body
        name: addressForm
        description: 地址表单
        required: true
        schema:
          $ref: '#/definitions/forms.Address'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/address/update:
    post:
      tags:
      - user/address
      description: 添加新的地址
      operationId: AddressController.更新指定 id 的地址
      parameters:
      - in: body
        name: addressForm
        description: 地址表单
        required: true
        schema:
          $ref: '#/definitions/forms.Address'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/cart/addCart:
    post:
      tags:
      - user/cart
      description: 添加购物车
      operationId: CartController.添加购物车
      parameters:
      - in: body
        name: cartForm
        description: 购物车信息
        required: true
        schema:
          $ref: '#/definitions/forms.CartForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/cart/cartDel:
    post:
      tags:
      - user/cart
      description: 删除当前用户指定 product_package_id 的购物车记录
      operationId: CartController.删除当前用户指定 product_package_id 的购物车记录
      parameters:
      - in: body
        name: delCartForm
        description: 购物车信息
        required: true
        schema:
          $ref: '#/definitions/forms.DelCartForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/cart/cartEdit:
    post:
      tags:
      - user/cart
      description: 编辑购物车
      operationId: CartController.编辑购物车
      parameters:
      - in: body
        name: cartForm
        description: 购物车信息
        required: true
        schema:
          $ref: '#/definitions/forms.CartForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/cart/cartList:
    get:
      tags:
      - user/cart
      description: 获取购物车列表
      operationId: CartController.购物车列表
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Cart'
        "400":
          description: ""
  /user/cart/delCartChecked:
    post:
      tags:
      - user/cart
      description: 删除选中
      operationId: CartController.删除选中
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/cart/editCheckAll:
    post:
      tags:
      - user/cart
      description: 全选/全不选
      operationId: CartController.全选/全不选
      parameters:
      - in: body
        name: cartForm
        description: 购物车信息
        required: true
        schema:
          $ref: '#/definitions/forms.CheckAllForm'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/getInfoById:
    get:
      tags:
      - user
      description: 根据 UserId 来获取对应 User 的信息
      operationId: UserControllers.根据 UserId 来获取对应 User 的信息
      parameters:
      - in: query
        name: id
        description: 用户ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ""
  /user/getLicenseByUserId:
    get:
      tags:
      - user
      description: 根据 user_id 来获取对应 License 的信息
      operationId: UserControllers.根据 user_id 来获取对应 License 的信息
      parameters:
      - in: query
        name: user_id
        description: 用户ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ""
  /user/id:
    get:
      tags:
      - user
      description: 根据 Id（数据库表 Id ，不是用户名）来获取对应用户信息
      operationId: UserControllers.根据 id 获取 User
      parameters:
      - in: query
        name: id
        description: 数据库 User 表ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ""
  /user/info:
    get:
      tags:
      - user
      description: 用户登录之后查询当前登录的用户信息，每次查询会刷新 Session 有效期
      operationId: ManagerUserController.根据当前的 Session 查询对应的用户信息
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ""
  /user/license/save:
    post:
      tags:
      - user/license
      description: 保存产品
      operationId: LicenseController.保存产品
      parameters:
      - in: body
        name: form
        description: 产品model
        required: true
        schema:
          $ref: '#/definitions/models.License'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/login:
    post:
      tags:
      - user
      description: 用账号密码登录
      operationId: ManagerUserController.登录
      parameters:
      - in: body
        name: userForm
        description: 登录账号密码
        required: true
        schema:
          $ref: '#/definitions/forms.LoginForm'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: ""
  /user/logout:
    post:
      tags:
      - user
      description: 注销
      operationId: ManagerUserController.注销
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/register:
    post:
      tags:
      - user
      description: 注册
      operationId: ManagerUserController.注册
      parameters:
      - in: body
        name: user
        description: 注册信息
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ""
        "400":
          description: ""
  /user/uploadImage:
    post:
      tags:
      - user
      description: 上传图片
      operationId: UserControllers.上传图片
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: file
        description: 图片文件
        required: true
        schema:
          $ref: '#/definitions/multipart.File'
      responses:
        "200":
          description: ""
        "400":
          description: ""
    options:
      tags:
      - user
definitions:
  enums.FundingStatus:
    title: FundingStatus
    format: int64
    type: integer
    enum:
    - FundingStatus_Success = 1
    - FundingStatus_Fail = 2
    - FundingStatus_Ing = 3
    example: 1
  enums.OrderStatus:
    title: OrderStatus
    format: int64
    type: integer
  forms.Address:
    title: Address
    type: object
    properties:
      Address:
        type: string
      Default:
        type: boolean
      ID:
        type: integer
        format: int64
      Name:
        type: string
      Phone:
        type: string
  forms.CartForm:
    title: CartForm
    type: object
    properties:
      checked:
        type: boolean
      nums:
        type: integer
        format: int64
      product_package_id:
        type: integer
        format: int64
  forms.CheckAllForm:
    title: CheckAllForm
    type: object
    properties:
      checked:
        type: boolean
  forms.DelCartForm:
    title: DelCartForm
    type: object
    properties:
      product_package_id:
        type: integer
        format: int64
  forms.LoginForm:
    title: LoginForm
    type: object
    properties:
      Password:
        type: string
      Username:
        type: string
  forms.NewOrderForm:
    title: NewOrderForm
    type: object
    properties:
      Address:
        type: string
      Name:
        type: string
      Phone:
        type: string
      order_pkg_list:
        type: array
        items:
          $ref: '#/definitions/forms.OrderPkgItem'
      order_total:
        type: number
        format: double
  forms.OrderPkgItem:
    title: OrderPkgItem
    type: object
    properties:
      nums:
        type: integer
        format: int64
      price:
        type: number
        format: double
      product_id:
        type: integer
        format: int64
      product_package_id:
        type: integer
        format: int64
      seller_id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
  forms.OrderSendOutForm:
    title: OrderSendOutForm
    type: object
    properties:
      checking_number:
        type: string
      order_id:
        type: integer
        format: int64
  forms.PageForm:
    title: PageForm
    type: object
    properties:
      Page:
        type: integer
        format: int64
      PageSize:
        type: integer
        format: int64
  forms.RegisterForm:
    title: RegisterForm
    type: object
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
  forms.SellerGetOrderListForm:
    title: SellerGetOrderListForm
    type: object
    properties:
      Page:
        type: integer
        format: int64
      PageSize:
        type: integer
        format: int64
      funding_status:
        $ref: '#/definitions/enums.FundingStatus'
      order_status:
        $ref: '#/definitions/enums.OrderStatus'
      product_id:
        type: integer
        format: int64
  models.Address:
    title: Address
    type: object
    properties:
      address:
        type: string
      created_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
  models.BaseModel:
    title: BaseModel
    type: object
    properties:
      created_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      updated_at:
        type: string
        format: datetime
  models.Cart:
    title: Cart
    type: object
    properties:
      checked:
        type: boolean
      created_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      nums:
        type: integer
        format: int64
      product_package_id:
        type: integer
        format: int64
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
  models.CommentsInfo:
    title: CommentsInfo
    type: object
    properties:
      content:
        type: string
      created_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      is_seller:
        type: boolean
      product_id:
        type: integer
        format: int64
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
  models.CommentsReply:
    title: CommentsReply
    type: object
    properties:
      comment_id:
        type: integer
        format: int64
      content:
        type: string
      created_at:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      is_seller:
        type: boolean
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
  models.License:
    title: License
    type: object
    properties:
      address:
        type: string
      company_name:
        type: string
      created_at:
        type: string
        format: datetime
      description:
        type: string
      id:
        type: integer
        format: int64
      license_image_url:
        type: string
      phone:
        type: string
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
      verify_message:
        type: string
      verify_status:
        type: integer
        format: int64
  models.Product:
    title: Product
    type: object
    properties:
      backers:
        type: integer
        format: int64
      big_img:
        type: string
      created_at:
        type: string
        format: datetime
      current_price:
        type: number
        format: double
      detail_html:
        type: string
      end_time:
        type: string
        format: datetime
      funding_status:
        $ref: '#/definitions/enums.FundingStatus'
      id:
        type: integer
        format: int64
      name:
        type: string
      product_packages:
        type: array
        items:
          $ref: '#/definitions/models.ProductPackage'
      product_type:
        type: integer
        format: int64
      small_img:
        type: string
      target_price:
        type: number
        format: double
      updated_at:
        type: string
        format: datetime
      user_id:
        type: integer
        format: int64
      verify_message:
        type: string
      verify_status:
        type: integer
        format: int64
  models.ProductPackage:
    title: ProductPackage
    type: object
    properties:
      backers:
        type: integer
        format: int64
      created_at:
        type: string
        format: datetime
      delivery_day:
        type: integer
        format: int64
      description:
        type: string
      freight:
        type: number
        format: double
      id:
        type: integer
        format: int64
      image_url:
        type: string
      price:
        type: number
        format: double
      product_id:
        type: integer
        format: int64
      stock:
        type: integer
        format: int64
      total:
        type: integer
        format: int64
      updated_at:
        type: string
        format: datetime
  models.ProductType:
    title: ProductType
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  models.User:
    title: User
    type: object
    properties:
      created_at:
        type: string
        format: datetime
      default_address_id:
        type: integer
        format: int64
      email:
        type: string
      icon_url:
        type: string
      id:
        type: integer
        format: int64
      license_id:
        type: string
      nickname:
        type: string
      person_id:
        type: integer
        format: int64
      phone:
        type: string
      role_id:
        type: integer
        format: int64
      updated_at:
        type: string
        format: datetime
      username:
        type: string
  multipart.File:
    title: File
    type: object
  resultModels.CheckoutPkgInfo:
    title: CheckoutPkgInfo
    type: object
    properties:
      description:
        type: string
      end_time:
        type: string
        format: datetime
      image_url:
        type: string
      price:
        type: number
        format: double
      product_id:
        type: integer
        format: int64
      product_name:
        type: string
      product_package_id:
        type: integer
        format: int64
      seller_id:
        type: integer
        format: int64
      seller_nickname:
        type: string
      stock:
        type: integer
        format: int64
tags:
- name: product
  description: |
    产品相关
- name: user
  description: |
    用户相关
- name: user/address
  description: |
    用户地址相关
- name: user/cart
  description: |
    用户购物车相关
- name: user/license
  description: |
    营业执照相关
    放在 /user/license 路由下吧
- name: order
  description: |
    用户订单相关
- name: pm
  description: |
    产品管理相关（商家 审核员）
    为了方便，这个 Controller 的 URL 地址缩写为 /pm
- name: comments
  description: |
    产品详情获取评论列表是写在 /controller/product.go 里面
    评论相关 主要是提交评论和回复，需要验证身份
- name: license
  description: |
    执照信息相关的 API
    BASE_API 应该为 /manager/ 但是自动生成的是错的，不知道怎么改,所以这个端口 SWAGGER 不能正常测试
- name: user
  description: |
    管理端的 UserController
